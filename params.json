{"name":"Jenkins-events-handlers","tagline":"","body":"# jenkins-events-handlers\r\n\r\nThis project listens on the ZMQ events from [zmq-event-publisher](https://git.openstack.org/cgit/openstack-infra/zmq-event-publisher) to perform various actions upon custom rules.\r\n\r\n## How to Setup\r\n\r\n<TODO>\r\n\r\nMake up your own configuration:\r\n\r\n```\r\ncp config.yaml.sample config.yaml\r\nvim config.yaml\r\n```\r\n\r\nThe next section will describe how to compose this file\r\n\r\nStart the service, the service will be running in a screen called \"slack_zmq\" that you can detach and attach at any time:\r\n\r\n```\r\n./start_listener.sh\r\n```\r\n\r\nYou may also stop the service using `stop_listener.sh` and restart it using `restart_listener.sh`\r\n\r\n## Compose config.yaml\r\n\r\n### Configure the ZMQ Publish Address of the Jenkins Master\r\n\r\nThe ZMQ publish address can be configured with one line as a top element in the YAML file:\r\n\r\n```ruby\r\nzmq-address: 'tcp://<your jenkins master>:5555'\r\n```\r\n\r\n### Configure the Jenkins Master Information\r\n\r\nThe Jenkins master information is described with 3 lines of YAML code, an example:\r\n\r\n```ruby\r\njenkins_url: http://<your jenkins master>:8080/\r\njenkins_username: Joshua\r\njenkins_password: passw0rd\r\n```\r\n\r\n### Enable the Event Handlers\r\n\r\nFor now there are 2 handlers in this project, jenkins-flow-analyzer(`jenkins_flow_analyzer.py`) and jenkins-slack-publisher(`jenkins_slack_publisher.py`), you may enable one or both in the `handlers` section:\r\n\r\n```ruby\r\nhandlers:\r\n  - jenkins-flow-analyzer\r\n  - jenkins-slack-publisher\r\n```\r\n\r\n### Configure jenkins-slack-publisher\r\n\r\nThe configuration of jenkins-slack-publisher is described in `jenkins-slack-publisher` top element.\r\n\r\nConfigure the name, token, and as-user (if true, the bot will be displayed as a human user of the token) of the bots in `bots`.\r\n\r\nConfigure the rules in the `rules` section. Each rule consists of 4 parts:\r\n\r\n* name-pattern: should be a Python regex to match the Jenkins job names\r\n* match-any: a \"key\" path to match the data in the event, the event will be handled if any entry is matched\r\n* bot: the bot name to publish the event\r\n* channel: the channel to publish the event\r\n\r\nA event from zmq-event-publisher is like:\r\n\r\n```\r\n{\"name\":\"Build_VM\",\"url\":\"job/Build_VM/\",\"build\":{\"full_url\":\"http://<jenkins_url>:8080/job/Build_VM/2357/\",\"number\":2357,\"phase\":\"FINISHED\",\"status\":\"FAILURE\",\"url\":\"job/Build_VM/2357/\",\"parameters\":{\"index\":\"36\"},\"node_name\":\"\",\"host_name\":\"192.168.122.1\"}}\r\n```\r\n\r\nSo if you want to match the host_name in the example above, you should write the rule like:\r\n\r\n```ruby\r\n      match-any:\r\n        - build.parameters.host_name: '192.168.122.1'\r\n```\r\n\r\nThe code will search for the value using the path `build->parameters->host_name` upon the event.\r\n\r\nA sample configuration:\r\n\r\n```ruby\r\njenkins-slack-publisher:\r\n  bots:\r\n    - name: bot-joshua\r\n      token: '<your slack token>'\r\n      as-user: true\r\n    - name: bot-delivery\r\n      token: '<your slack token>'\r\n  rules:\r\n    - name-pattern: '^\\Flow_(Deploy|Update|Refresh|Deployment|Destroy)$'\r\n      match-any:\r\n        - build.parameters.index: '26'\r\n        - build.parameters.index: '32'\r\n        - build.parameters.index: '48'\r\n      bot: bot-joshua\r\n      channel: '#test-everything'\r\n\r\n    - name-pattern: '^Build_(Baremetal|VM)$'\r\n      match-any:\r\n        - build.parameters.index: '36'\r\n        - build.parameters.index: '48'\r\n      bot: bot-joshua\r\n      channel: '#test-everything'\r\n\r\n    - name-pattern: '^\\Flow_Pipeline_(Refresh|Update)$'\r\n      bot: bot-delivery\r\n      channel: '#deliver-everything'\r\n```\r\n\r\n### Configure jenkins-flow-analyzer (Optional)\r\n\r\n__Important Note__: This handler only applies to the flow jobs used in ICOS since there is some special logic in the flows so that the handler can analyze.\r\n\r\nThe configuration of jenkins-flow-analyzer is described in `jenkins-flow-analyzer` top element.\r\n\r\nConfigure the name, token, channel and as-user (if true, the bot will be displayed as a human user of the token) in `slack`.\r\n\r\nConfigure the Jenkins build flows in the `flows` section.\r\n\r\n```ruby\r\njenkins-flow-analyzer:\r\n  slack:\r\n    name: bot-joshua\r\n    token: '<your slack token>'\r\n    channel: '#test-everything'\r\n    as-user: true\r\n  flows:\r\n    - Flow_Deploy\r\n    - Flow_Update\r\n    - Flow_Refresh\r\n```\r\n\r\n### A Working Sample\r\n\r\n```ruby\r\nzmq-address: 'tcp://<your jenkins master>:5555'\r\n\r\njenkins_url: http://<your jenkins master>:8080/\r\njenkins_username: Joshua\r\njenkins_password: passw0rd\r\n\r\nhandlers:\r\n  - jenkins-flow-analyzer\r\n  - jenkins-slack-publisher\r\n\r\nbots:\r\n  - name: bot-joshua\r\n    token: '<your slack token>'\r\n\r\njenkins-flow-analyzer:\r\n  slack:\r\n    name: bot-joshua\r\n    token: '<your slack token>'\r\n    channel: '#test-everything'\r\n    as-user: true\r\n  flows:\r\n  - Flow_Deploy\r\n  - Flow_Update\r\n  - Flow_Refresh\r\n\r\njenkins-slack-publisher:\r\n  bots:\r\n    - name: bot-joshua\r\n      token: '<your slack token>'\r\n      as-user: true\r\n    - name: bot-delivery\r\n      token: '<your slack token>'\r\n  rules:\r\n    - name-pattern: '^\\Flow_(Deploy|Update|Refresh|Deployment|Destroy)$'\r\n      match-any:\r\n        - build.parameters.index: '26'\r\n        - build.parameters.index: '32'\r\n        - build.parameters.index: '48'\r\n      bot: bot-joshua\r\n      channel: '#test-everything'\r\n\r\n    - name-pattern: '^Build_(Baremetal|VM)$'\r\n      match-any:\r\n        - build.parameters.index: '36'\r\n        - build.parameters.index: '48'\r\n      bot: bot-joshua\r\n      channel: '#test-everything'\r\n\r\n    - name-pattern: '^\\Flow_(Refresh|Update)$'\r\n      bot: bot-delivery\r\n      channel: '#deliver-everything'\r\n```\r\n\r\n## Limitations and Future Plans\r\n\r\n### Limitations\r\n\r\nCurrently this service has the following limitations:\r\n\r\n* Only one Jenkins master is supported.\r\n* The configuration file can only be named as `config.yaml`.\r\n* The jenkins-flow-analyzer is not applicable for general Jenkins build flow analysis.\r\n* The architecture is not flexible enough for easy extension\r\n\r\n### Future Plans\r\n\r\n* Using Slack WebSocket instead of APIs to reduce communication cost.\r\n* Support multiple Jenkins masters.\r\n* Refactor the architecture to support easier extension/integration.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}